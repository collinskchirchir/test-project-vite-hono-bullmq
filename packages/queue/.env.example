# ============================================
# Queue Package Environment Variables
# ============================================
# This file documents all environment variables used by the @repo/queue package.
# Copy this file to .env in your application root and fill in the values.

# ============================================
# Redis Configuration (Required)
# ============================================
# Redis is used by BullMQ to store and manage job queues.
# These settings control how the queue package connects to Redis.

# Redis server hostname or IP address
# Development: Use 'localhost' if running Redis locally
# Production: Use your Redis server hostname or IP
REDIS_HOST=localhost

# Redis server port
# Default Redis port is 6379
REDIS_PORT=6379

# Redis password for authentication
# Development: Leave empty if Redis has no password
# Production: REQUIRED - Use a strong password for security
REDIS_PASSWORD=

# Redis database number (0-15)
# Use different database numbers to isolate queues in different environments
# Development: 0 (default)
# Testing: 15 (recommended to avoid conflicts)
# Production: 0 (default)
REDIS_DB=0

# ============================================
# SMS Provider Configuration
# ============================================
# Configure which SMS provider to use and its credentials.
# The queue package supports multiple providers through a factory pattern.

# SMS provider selection
# Options: 'mock' | 'salum'
# Development: Use 'mock' to simulate SMS sending without actual API calls
# Production: Use 'salum' or your configured provider
SMS_PROVIDER=mock

# ============================================
# Salum SMS Provider Configuration
# ============================================
# Required only if SMS_PROVIDER=salum
# Salum is an SMS gateway provider for Kenya and East Africa.
# Sign up at https://sms.salum.co.ke to get your credentials.

# Salum API Key
# Get this from your Salum dashboard
SALUM_API_KEY=

# Salum Partner ID
# Your unique partner identifier from Salum
SALUM_PARTNER_ID=

# Salum Shortcode/Sender ID
# The name or number that appears as the sender of your SMS
# Example: 'BURETI-TEA', 'MyCompany', etc.
SALUM_SHORTCODE=

# ============================================
# Application Environment
# ============================================
# General application environment setting
# This affects validation and default behaviors

# Application environment
# Options: 'development' | 'production' | 'test'
# Development: Relaxed validation, uses defaults
# Production: Strict validation, requires all critical configs
NODE_ENV=development

# ============================================
# Example Configurations by Environment
# ============================================

# --- DEVELOPMENT EXAMPLE ---
# Use this configuration for local development with mock SMS provider
# REDIS_HOST=localhost
# REDIS_PORT=6379
# REDIS_PASSWORD=
# REDIS_DB=0
# SMS_PROVIDER=mock
# NODE_ENV=development

# --- PRODUCTION EXAMPLE (with Salum) ---
# Use this configuration for production deployment with real SMS sending
# REDIS_HOST=your-redis-server.example.com
# REDIS_PORT=6379
# REDIS_PASSWORD=your-strong-redis-password
# REDIS_DB=0
# SMS_PROVIDER=salum
# SALUM_API_KEY=ecc1c7eccaac2a9900e6d5a7cbeb0a92
# SALUM_PARTNER_ID=13547
# SALUM_SHORTCODE=BURETI-TEA
# NODE_ENV=production

# --- DOCKER COMPOSE EXAMPLE ---
# Use this configuration when running Redis via Docker Compose
# REDIS_HOST=redis
# REDIS_PORT=6379
# REDIS_PASSWORD=
# REDIS_DB=0
# SMS_PROVIDER=mock
# NODE_ENV=development

# ============================================
# Additional Notes
# ============================================
# 
# 1. Redis Connection:
#    - Ensure Redis is running before starting workers
#    - Test connection with: redis-cli -h <host> -p <port> ping
#    - For Docker: Use service name as hostname (e.g., 'redis')
#
# 2. SMS Provider:
#    - Always use 'mock' provider in development to avoid charges
#    - Mock provider logs messages to console instead of sending
#    - Switch to real provider only in staging/production
#
# 3. Security:
#    - Never commit .env files with real credentials to version control
#    - Use strong passwords for Redis in production
#    - Rotate API keys regularly
#    - Use environment-specific .env files (.env.production, .env.staging)
#
# 4. Scaling:
#    - Multiple workers can share the same Redis instance
#    - Use Redis Cluster for high availability in production
#    - Consider Redis persistence (AOF/RDB) for job durability
#
# 5. Monitoring:
#    - Monitor Redis memory usage and connection count
#    - Set up alerts for failed jobs
#    - Use BullMQ Board or similar tools for queue visualization
#
# For more information, see:
# - docs/getting-started.md - Setup and installation guide
# - docs/deployment.md - Production deployment strategies
# - docs/troubleshooting.md - Common issues and solutions
